import numpy as np
from matplotlib import pyplot as plt

def plotparallelismblock():
    block_128_1 = np.array([5.446811,3.212315,2.465447,1.756117,1.600288,1.527803,1.395346,1.295977,1.320155,1.335125,1.254520,1.178989,1.098396,0.997930,0.888971,0.822334,0.794214,0.841087,0.866652,0.809716,0.757892,0.752148,0.720038,0.690228,0.664252,0.666555,0.661118,0.708034,0.612979,0.610669,0.563108,0.567159,0.559068,0.577890,0.567202,0.551281,0.584962,0.637781,0.527908,0.531832,0.527410,0.497612,0.455456,0.500693,0.475059,0.468031,0.502682,0.589169,0.482241,0.482413,0.481949,0.558839,0.464764,0.537617,0.436458,0.436004,0.509929,0.413594,0.389980,0.404249,0.394368,0.430162,0.407733,0.511110,0.505497,0.506586,0.379471,0.506648,0.380675,0.438021,0.538281,0.483997,0.399906,0.480021,0.507049,0.581698,0.476661,0.599326,0.528559,0.412461,0.418343,0.527099,0.523048,0.402422,0.491431,0.489136,0.450991,0.402180,0.497630,0.468287,0.407659,0.533122,0.373872,0.477001,0.372844,0.499216,0.550221,0.406830,0.526987,0.593970,0.375093,0.455590,0.464146,0.517742,0.375479,0.480874,0.523293,0.742863,0.772232,0.608075,0.733088,0.841033])
    block_128_2 = np.array([5.650265,3.156496,2.540121,1.969025,1.871785,1.625241,1.364668,1.199079,1.281204,1.205797,1.232754,1.125176,1.019188,0.971067,0.936456,0.915871,0.803815,0.763671,0.803793,0.767492,0.763103,0.700638,0.679959,0.789870,0.636827,0.747508,0.650375,0.670759,0.573327,0.588097,0.598823,0.563522,0.568030,0.587037,0.562288,0.556703,0.541195,0.622886,0.548712,0.486784,0.554694,0.524201,0.489913,0.505109,0.548090,0.507365,0.477098,0.467789,0.460704,0.481711,0.559032,0.475446,0.542546,0.480114,0.566642,0.496263,0.456371,0.510289,0.495461,0.521651,0.531605,0.519064,0.494853,0.496874,0.382792,0.377307,0.496093,0.526428,0.508921,0.419140,0.380667,0.492259,0.446546,0.493481,0.503763,0.415460,0.499416,0.431896,0.509799,0.520746,0.445099,0.452643,0.389267,0.467437,0.498239,0.430230,0.509889,0.481530,0.482682,0.585067,0.507352,0.558669,0.530281,0.473401,0.445866,0.465541,0.502687,0.660137,0.510670,0.495342,0.480968,0.540004,0.480133,0.535715,0.625228,0.520758,0.591853,0.501336,0.554321,0.588473,0.653397,0.804308])
    block_128_3 = np.array([5.437868,2.980811,2.210711,1.838416,1.680618,1.571314,1.456894,1.322225,1.190580,1.249770,1.193541,1.119885,1.093051,1.058411,1.016500,0.843814,0.810915,0.801067,0.767945,0.932845,0.755672,0.743308,0.713404,0.687673,0.779341,0.682479,0.640955,0.632873,0.614516,0.609697,0.591406,0.572438,0.553912,0.605666,0.548525,0.551261,0.509093,0.513973,0.512265,0.501563,0.526130,0.516229,0.456614,0.514703,0.520819,0.479342,0.435899,0.468943,0.457916,0.523705,0.464787,0.590078,0.466438,0.450200,0.505953,0.477271,0.515858,0.400682,0.533209,0.503421,0.506631,0.411519,0.534567,0.406132,0.404555,0.384857,0.367987,0.422353,0.480545,0.473217,0.412187,0.460956,0.502868,0.487450,0.397184,0.541373,0.386718,0.518594,0.528451,0.523478,0.512154,0.499204,0.497474,0.521372,0.431987,0.479222,0.396252,0.535498,0.426799,0.524842,0.649310,0.510725,0.417629,0.408026,0.486788,0.503767,0.419501,0.497142,0.511580,0.470144,0.512802,0.415401,0.443911,0.543758,0.469678,0.365210,0.563156,0.535066,0.362203,0.449918,0.864343,0.578205])
    block_128_avg = (block_128_1 + block_128_2 + block_128_3) / 3.0
    speedup_128 = block_128_avg[0] / block_128_avg
    block_256_1 = np.array([46.40874,23.84428,14.11999,10.71356,8.760364,8.016713,7.407136,6.303822,6.662845,6.863974,6.338131,6.425476,5.664642,5.197555,4.677865,3.989092,4.148962,4.600097,4.401654,4.029910,3.972357,3.556389,3.080730,3.010669,3.144774,3.213491,3.118338,3.165421,2.959962,2.862780,2.798940,2.590684,2.523329,2.613933,2.944725,2.729301,2.637361,2.471627,2.359598,2.250779,2.351517,2.314574,2.517511,2.434294,2.207219,2.279966,2.257176,2.228465,2.048486,2.102573,2.241367,2.061513,2.104903,2.061407,2.042937,2.196050,2.176980,2.108672,2.138259,1.972048,1.922503,1.907968,1.875761,1.997757,1.889254,1.959399,1.977876,1.965192,1.902422,1.978891,1.994130,2.001118,2.019910,2.036618,1.921717,2.024881,1.920412,2.005569,1.789367,1.742962,1.762047,1.717087,1.737593,1.681936,1.641339,1.757241,1.817861,1.816796,1.743031,1.709989,1.853328,1.841034,1.891657,1.849532,1.939072,1.715014,2.026905,1.959311,1.871942,2.046445,1.894405,1.821553,1.814885,1.902235,1.765007,1.877203,2.011579,1.817388,2.145246,2.067919,1.915063,1.879183])
    block_256_2 = np.array([46.61467,23.85739,13.95590,10.91720,9.219246,8.885330,7.594923,7.186861,6.764183,7.181380,6.645681,6.776983,6.099984,5.063794,4.914728,4.318570,3.860353,4.133287,4.368266,4.050540,3.819066,3.594668,3.363686,3.204125,2.817190,3.187064,3.206092,3.352352,2.900495,2.789439,2.766292,2.444033,2.575141,2.721758,2.776570,2.721624,2.566473,2.439806,2.476725,2.341424,2.191588,2.299445,2.393669,2.335025,2.256455,2.278412,2.129774,2.031861,2.046878,2.187328,2.112530,2.283834,2.080358,2.324303,2.115833,2.011806,2.131174,2.223145,2.145549,2.081387,1.992513,1.998136,1.960796,1.887185,1.990638,1.996527,1.991173,1.916230,1.970298,1.962239,2.031448,2.026189,1.922582,1.848454,1.937724,1.866139,1.835288,1.763509,1.700567,1.762112,1.804042,1.811593,1.806256,1.767792,1.673037,1.758794,1.665661,1.693359,1.794319,1.687012,1.904727,1.831800,1.820411,1.821233,1.781643,1.840995,2.021763,1.870143,1.749877,1.862653,1.785282,2.015126,1.776488,1.900957,1.844985,1.876864,2.038930,1.835394,1.739417,2.058373,2.106778,2.146690])
    block_256_3 = np.array([45.47885,23.57012,13.96041,11.29033,9.465813,8.277644,7.247712,6.533170,6.983058,7.150775,6.400235,6.892651,5.882127,5.266423,4.623143,3.869175,4.265052,4.328413,4.346051,4.216349,3.695196,3.366067,3.303411,3.100255,3.211181,3.208136,3.151837,3.142248,3.115857,2.895052,2.699066,2.483226,2.616981,2.589206,2.723294,2.725657,2.552179,2.509005,2.361140,2.355684,2.219366,2.265673,2.439156,2.287560,2.257414,2.228020,2.115525,2.151153,2.123271,2.097941,2.140259,2.143564,2.020795,2.110357,2.002586,2.183307,1.981556,2.182548,1.938380,2.001563,1.927408,1.822290,1.913796,1.941580,2.000107,2.039109,1.976894,1.963609,1.835351,1.957064,1.986398,1.916243,2.043103,1.999389,1.918822,1.999103,1.958841,1.905540,1.682692,1.785153,1.674470,1.683657,1.794932,1.747555,1.942014,1.649450,1.975758,1.766332,1.848507,1.714249,1.701924,1.723451,1.796309,1.859090,1.699970,1.798667,1.796580,1.871211,1.884963,1.741532,1.896741,2.136686,1.866061,1.729105,1.865067,1.775525,2.104694,1.800763,1.951916,2.114586,1.704434,1.880979])
    block_256_avg = (block_256_1 + block_256_2 + block_256_3) / 3.0
    speedup_256 = block_256_avg[0] / block_256_avg
    block_1024_1 = np.array([218.745617,101.430142,65.229193,48.445755,40.858131,36.071675,28.059270,25.315695,26.021455,24.904856,28.018527,26.984295,22.525418,18.466012,17.409033,13.333149,15.254117,16.088209,15.349227,16.212413,14.056312,12.952481,11.099423,9.668175,11.054824,11.597543,11.315361,12.178810,11.268114,10.434999,9.312137,7.545286,8.459395,9.552779,8.703617,7.557065,7.055812,6.912899,6.266452,5.246408,6.051799,6.283832,6.419407,6.361942,5.719927,6.207621,5.514235,4.697550,4.917291,5.710776,5.400222,5.704848,5.475528,5.081812,4.630947,4.334326,4.392721,5.020972,5.043900,4.878259,4.860738,4.289072,3.943606,3.660924,3.995716,4.336213,4.371172,4.504635,4.231286,3.961443,3.800927,3.401459,3.955487,3.801699,4.259991,4.329617,3.878188,3.634042,3.513639,3.157432,3.304733,3.716388,3.570458,3.816822,3.724555,3.301682,3.007250,3.009702,2.888281,3.304299,3.465025,3.506549,3.233484,2.912832,2.907363,2.736467,2.795360,2.929144,2.941314,2.981868,2.965134,2.668385,2.659419,2.726430,2.764498,2.705099,2.666077,2.640828,2.586356,2.606357,2.510361,2.629494])
    block_1024_2 = np.array([219.335336,102.123426,64.373578,47.900094,40.376399,32.829793,28.264203,25.104167,29.757663,30.137090,27.167397,27.292703,23.644293,19.500034,16.286921,13.310408,15.801514,15.221650,15.590006,16.511997,14.847009,13.130782,11.449986,9.605226,11.076675,10.967915,11.799084,12.431654,11.481141,10.262502,9.159817,8.268967,9.151412,9.455863,8.197697,7.732661,7.029592,6.760597,6.381316,5.628245,5.288037,6.325476,5.950796,6.568719,6.190859,6.029631,5.525638,4.865562,5.167737,5.317839,5.507416,5.463165,5.407323,5.197676,4.620256,4.186282,4.542745,4.738515,5.022557,4.874733,4.805580,4.483472,4.143794,3.813245,4.013081,4.415216,4.501977,4.258628,4.387160,3.852779,3.985736,3.519848,3.834382,3.949402,4.147307,4.147227,3.860041,3.641184,3.409703,3.140365,3.420975,3.773291,3.559595,4.169595,3.299172,3.171762,3.031594,2.850410,2.982915,3.142589,3.255508,3.407873,3.021275,3.065785,2.694272,2.631064,2.835913,2.881426,2.796674,3.000218,2.573849,2.727069,2.691138,2.668380,2.679863,2.730314,2.930414,2.849540,2.688552,2.551590,2.568405,2.467590])
    block_1024_3 = np.array([223.767312,102.804687,66.246233,49.377241,40.854871,36.292191,31.303525,26.710064,29.914939,28.720590,27.479248,24.844534,22.350395,20.166720,18.375805,16.410321,16.211062,16.589046,15.534533,16.261619,14.630604,13.467533,12.009212,11.515407,11.528445,11.491625,11.907528,12.458882,10.950815,10.980401,9.916010,9.338799,8.911464,9.273350,8.145787,7.427046,7.110452,6.791874,6.534443,6.587823,6.266978,7.099730,6.927973,6.723715,6.414656,6.402818,6.264738,6.195579,5.956546,6.030361,5.946189,5.849398,5.525832,5.831383,5.603229,5.641653,5.521597,5.735659,5.855462,5.916247,6.525737,5.716695,5.224417,5.108002,5.415827,5.408241,5.205253,5.070351,5.196913,5.028046,5.150690,4.948515,4.933301,5.350356,5.300537,5.226809,5.600909,4.762261,4.762342,4.640566,4.768373,4.614344,4.587786,4.815639,4.820210,4.518585,4.361941,4.565698,4.648574,4.531641,4.751091,4.760621,4.640113,4.363610,4.366792,4.472746,4.633801,4.906770,4.595002,4.378787,4.126255,4.184535,4.168794,4.372064,4.330111,4.622344,4.563473,4.812595,4.405286,4.551130,4.416022,4.559734])
    block_1024_avg = (block_1024_1 + block_1024_2 + block_1024_3) / 3.0
    speedup_1024 = block_1024_avg[0] / block_1024_avg
    plt.title("Total time speedup - distribution = block")
    plt.plot(np.arange(0, 113, 1), c="grey", linestyle="--")
    plt.plot(np.arange(1, 113), np.round(speedup_128, 1), c="b", marker=".", label="128")
    plt.plot(np.arange(1, 113), np.round(speedup_256, 1), c="r", marker=".", label="256" )
    plt.plot(np.arange(1, 113), np.round(speedup_1024, 1), c="g", marker=".", label="1024" )
    plt.xlim([0, 113])
    plt.ylim([0, 71])
    plt.legend(loc="upper left")
    plt.xlabel("Number of cores")
    plt.ylabel("Speedup")
    plt.show()

def plotparallelismcollate():
    block_128_1 = np.array([0.000632,0.001872,0.001034,0.001404,0.003083,0.002661,0.002822,0.003425,0.005584,0.004127,0.004118,0.005478,0.003595,0.005695,0.004017,0.001668,0.002671,0.005103,0.004945,0.002577,0.002290,0.002194,0.002730,0.002746,0.002692,0.002682,0.002964,0.002930,0.002467,0.002671,0.002760,0.002895,0.002650,0.002830,0.002869,0.002726,0.002597,0.004206,0.002695,0.002666,0.002812,0.003231,0.002835,0.003300,0.003101,0.003586,0.003695,0.003437,0.003194,0.003587,0.003361,0.003272,0.002811,0.002846,0.002976,0.002938,0.002936,0.003064,0.002977,0.003011,0.003141,0.002990,0.003100,0.003547,0.003478,0.003596,0.003695,0.003872,0.003817,0.003899,0.004027,0.003975,0.003757,0.003851,0.003720,0.006396,0.003590,0.006059,0.004035,0.004101,0.003932,0.004952,0.004016,0.006550,0.004842,0.004359,0.007171,0.004651,0.005312,0.004711,0.004704,0.004652,0.004956,0.004807,0.005195,0.004841,0.009261,0.004906,0.005777,0.007748,0.005570,0.005393,0.005540,0.006075,0.005813,0.016042,0.005688,0.008019,0.006378,0.043054,0.008401,0.009398])
    block_128_2 = np.array([0.001261,0.000841,0.003270,0.001624,0.002733,0.002579,0.002393,0.003207,0.002456,0.004060,0.004972,0.005480,0.004831,0.003617,0.003510,0.005825,0.003191,0.002411,0.002191,0.002347,0.002842,0.002524,0.002501,0.002754,0.002297,0.002704,0.002736,0.003192,0.003391,0.002393,0.002389,0.002577,0.003038,0.002776,0.003043,0.002731,0.002752,0.002794,0.003243,0.002895,0.002944,0.003022,0.003402,0.003167,0.003500,0.003109,0.002989,0.003112,0.003275,0.003693,0.003235,0.003469,0.002933,0.002931,0.002817,0.003281,0.002990,0.002939,0.002980,0.002979,0.002960,0.003192,0.003033,0.003697,0.003674,0.003694,0.003903,0.003885,0.003848,0.004113,0.003999,0.003764,0.003610,0.003840,0.003675,0.003956,0.003725,0.004119,0.005289,0.004163,0.003936,0.003844,0.004021,0.005969,0.004323,0.004319,0.004730,0.004173,0.004591,0.009232,0.005433,0.005097,0.004902,0.004651,0.004940,0.006992,0.005813,0.006946,0.004675,0.005229,0.005262,0.005962,0.005545,0.006391,0.005564,0.005616,0.006208,0.006070,0.018109,0.039742,0.050869,0.017640])
    block_128_3 = np.array([0.000590,0.000842,0.001465,0.001521,0.003037,0.002180,0.003013,0.003107,0.003916,0.004495,0.004985,0.006362,0.005446,0.003977,0.004179,0.005574,0.004860,0.003247,0.002238,0.006028,0.002868,0.002473,0.002635,0.002715,0.002467,0.003551,0.002621,0.002921,0.002658,0.002405,0.002554,0.002753,0.002713,0.002489,0.002809,0.002586,0.002710,0.003171,0.002576,0.002888,0.002792,0.002854,0.002774,0.003107,0.003028,0.003149,0.003253,0.003106,0.003364,0.003391,0.003184,0.003317,0.002785,0.002844,0.003262,0.002796,0.002885,0.003065,0.002917,0.002956,0.003086,0.003034,0.003168,0.003619,0.003649,0.003848,0.003733,0.006745,0.003841,0.003688,0.003864,0.005243,0.003791,0.003768,0.003929,0.008532,0.003981,0.005226,0.004221,0.004091,0.004292,0.004039,0.004489,0.004225,0.004183,0.004285,0.004470,0.004556,0.004450,0.004580,0.004879,0.004856,0.007209,0.004958,0.008681,0.006177,0.004580,0.008578,0.007445,0.005282,0.008242,0.005072,0.005179,0.007184,0.005544,0.005645,0.033132,0.008478,0.006509,0.005780,0.100027,0.006668])
    block_128_avg = (block_128_1 + block_128_2 + block_128_3) / 3.0
    block_256_1 = np.array([0.004268,0.002709,0.003786,0.004771,0.005372,0.005949,0.005748,0.006543,0.005043,0.005572,0.006687,0.006273,0.005844,0.006231,0.006323,0.005747,0.006892,0.007866,0.007573,0.006533,0.007161,0.007043,0.006088,0.005986,0.006362,0.006849,0.007004,0.007448,0.006558,0.006430,0.007069,0.007492,0.007834,0.007228,0.007716,0.009300,0.009695,0.008317,0.009653,0.010191,0.009323,0.010799,0.008437,0.008858,0.008879,0.009331,0.008864,0.008566,0.007280,0.009054,0.008428,0.009163,0.010935,0.009477,0.009231,0.009731,0.008632,0.009857,0.008079,0.009634,0.008910,0.010326,0.009254,0.008901,0.008573,0.009557,0.010020,0.009061,0.009696,0.009629,0.009864,0.009991,0.009289,0.009852,0.008940,0.010097,0.008928,0.010770,0.009608,0.010790,0.010406,0.013715,0.011055,0.010202,0.009990,0.010151,0.010430,0.010485,0.011125,0.010242,0.011323,0.010540,0.011656,0.010554,0.011135,0.010638,0.011152,0.010581,0.010347,0.011687,0.010606,0.010939,0.010560,0.010015,0.010539,0.011403,0.011205,0.011038,0.011227,0.011813,0.035252,0.022699])
    block_256_2 = np.array([0.002008,0.005445,0.003693,0.005323,0.005647,0.005800,0.005396,0.005490,0.005415,0.007202,0.005725,0.006903,0.006273,0.005794,0.006622,0.005808,0.005903,0.006533,0.006588,0.006089,0.006438,0.006331,0.007594,0.007666,0.006673,0.007234,0.007837,0.008233,0.007709,0.007931,0.007937,0.008194,0.009555,0.010136,0.007296,0.008164,0.007000,0.008346,0.008112,0.010763,0.011898,0.012852,0.007912,0.008581,0.009252,0.008041,0.009456,0.008760,0.008516,0.008937,0.007925,0.007641,0.009662,0.011240,0.010949,0.008878,0.010275,0.010159,0.009343,0.008871,0.009953,0.008523,0.008585,0.008600,0.009510,0.008576,0.010018,0.009850,0.009930,0.010219,0.010922,0.011640,0.011394,0.009546,0.009886,0.009494,0.009751,0.009763,0.010477,0.011790,0.010390,0.011079,0.011517,0.011350,0.011286,0.010419,0.011073,0.010290,0.011100,0.011084,0.010950,0.011250,0.011036,0.010934,0.010740,0.010553,0.011890,0.010345,0.010429,0.011111,0.011365,0.012240,0.012957,0.011156,0.010769,0.012335,0.011137,0.011390,0.011636,0.011629,0.011483,0.012899])
    block_256_3 = np.array([0.003237,0.002756,0.003646,0.004278,0.005523,0.006535,0.005877,0.006870,0.005836,0.006484,0.007056,0.005789,0.006295,0.005971,0.007374,0.007133,0.007564,0.006201,0.005728,0.006476,0.006053,0.006092,0.007242,0.007048,0.007343,0.008392,0.007624,0.008004,0.008152,0.006470,0.007346,0.008047,0.008826,0.006625,0.011139,0.007875,0.010739,0.008551,0.008020,0.008999,0.010015,0.010261,0.011163,0.008270,0.007976,0.009529,0.008166,0.009381,0.008652,0.007163,0.009385,0.007921,0.009841,0.010922,0.009547,0.011703,0.012017,0.011083,0.008927,0.009047,0.009300,0.009042,0.008292,0.009634,0.011260,0.009672,0.009641,0.009154,0.009343,0.009656,0.010918,0.009335,0.010411,0.009583,0.009356,0.010190,0.009133,0.012207,0.010670,0.010290,0.010484,0.010084,0.010803,0.011739,0.010372,0.010595,0.011466,0.010137,0.010718,0.010414,0.010153,0.010916,0.011434,0.010962,0.011559,0.010124,0.009974,0.012168,0.010243,0.011753,0.012662,0.011267,0.010861,0.011702,0.013857,0.010698,0.011257,0.011180,0.010997,0.011978,0.021037,0.011122])
    block_256_avg = (block_256_1 + block_256_2 + block_256_3) / 3.0
    block_1024_1 = np.array([0.013056,0.016262,0.017421,0.037012,0.038272,0.040305,0.025967,0.021642,0.027364,0.026898,0.023995,0.025667,0.023936,0.029635,0.024068,0.026024,0.029148,0.024974,0.032378,0.024189,0.031863,0.027917,0.030603,0.030748,0.032580,0.032389,0.030526,0.034078,0.032516,0.033097,0.029609,0.033443,0.029997,0.033646,0.033891,0.035433,0.034476,0.033948,0.036490,0.031309,0.036962,0.036420,0.035875,0.030868,0.039983,0.037314,0.030415,0.033218,0.032467,0.038074,0.038771,0.033497,0.039209,0.034582,0.033013,0.034426,0.037195,0.038245,0.033597,0.034334,0.035473,0.036304,0.039717,0.035612,0.040725,0.037143,0.037049,0.043386,0.037268,0.037680,0.041583,0.037290,0.043167,0.040833,0.043909,0.051418,0.056481,0.056609,0.050842,0.051272,0.051364,0.049088,0.047674,0.036556,0.031387,0.053309,0.039799,0.050046,0.052662,0.044412,0.036000,0.040637,0.044658,0.049811,0.046535,0.050159,0.057023,0.050533,0.050483,0.045358,0.044128,0.030440,0.053496,0.052506,0.056531,0.044763,0.053472,0.050186,0.053006,0.076967,0.049533,0.048199])
    block_1024_2 = np.array([0.018375,0.023217,0.029827,0.037040,0.032320,0.019892,0.025031,0.024880,0.036354,0.030599,0.031134,0.027326,0.028319,0.025069,0.024273,0.024197,0.025733,0.025653,0.025727,0.030009,0.031343,0.026374,0.032528,0.030374,0.032179,0.031848,0.033804,0.031546,0.036243,0.029937,0.032435,0.029701,0.035050,0.031248,0.036141,0.038225,0.035482,0.031916,0.032795,0.031630,0.036585,0.036272,0.035732,0.035363,0.037391,0.031721,0.037377,0.037066,0.036459,0.037809,0.037888,0.036398,0.035187,0.033995,0.034135,0.038348,0.034907,0.039554,0.033867,0.039016,0.035875,0.038449,0.034518,0.035675,0.041515,0.036371,0.044879,0.035412,0.038447,0.036619,0.041036,0.036381,0.037724,0.044955,0.050501,0.050806,0.048374,0.049202,0.048559,0.050039,0.050428,0.046953,0.050783,0.054359,0.047524,0.054388,0.050662,0.051641,0.055341,0.050960,0.050634,0.052833,0.051146,0.055647,0.048306,0.053278,0.052477,0.047155,0.051539,0.040572,0.045402,0.043137,0.049271,0.052962,0.051333,0.043867,0.035356,0.047451,0.051511,0.052488,0.051921,0.026420])
    block_1024_3 = np.array([0.013457,0.015864,0.026033,0.040659,0.038082,0.040851,0.025168,0.020941,0.023413,0.041500,0.026150,0.030601,0.027583,0.025416,0.029294,0.030058,0.024968,0.033498,0.026044,0.026735,0.031096,0.027316,0.032020,0.027271,0.032642,0.030484,0.032331,0.033063,0.033689,0.034941,0.031500,0.031632,0.033763,0.036841,0.035633,0.031348,0.034289,0.031597,0.032422,0.033669,0.037925,0.034204,0.036486,0.048892,0.037449,0.037552,0.033477,0.033235,0.034306,0.041115,0.040835,0.036565,0.037421,0.042462,0.037138,0.040338,0.041334,0.036077,0.035090,0.042224,0.039126,0.040997,0.041966,0.040639,0.039598,0.041274,0.043442,0.043456,0.039493,0.039268,0.039733,0.038704,0.047321,0.049983,0.051497,0.048102,0.056997,0.051021,0.050160,0.050679,0.052613,0.050756,0.050813,0.055298,0.048642,0.049185,0.051082,0.051830,0.049072,0.048651,0.055432,0.050339,0.050730,0.056828,0.050355,0.051754,0.051303,0.052688,0.053055,0.052868,0.052072,0.051332,0.052499,0.056942,0.052651,0.052609,0.052090,0.051895,0.051549,0.051357,0.051278,0.054279])
    block_1024_avg = (block_1024_1 + block_1024_2 + block_1024_3) / 3.0
    plt.title("Collate time - distribution = block")
    plt.plot(np.arange(1, 113), block_128_avg, c="b", marker=".", label="128")
    plt.plot(np.arange(1, 113), block_256_avg, c="r", marker=".", label="256" )
    plt.plot(np.arange(1, 113), block_1024_avg, c="g", marker=".", label="1024" )
    plt.xlim([0, 113])
    plt.legend(loc="upper left")
    plt.xlabel("Number of cores")
    plt.ylabel("Time (s)")
    plt.show()

def plotweakscaling():
    weak_1 = np.array([5.854297,5.789657,10.718422,5.148823])
    weak_2 = np.array([5.599280,5.926641,10.826350,4.040421])
    weak_3 = np.array([5.658052,6.096257,11.072895,3.944783])
    weak_avg = (weak_1 + weak_2 + weak_3) / 3.0
    weak_eff = weak_avg[0] / weak_avg
    plt.title("Weak scaling efficiency")
    plt.axhline(y=1, c="grey", linestyle="--", label="Ideal efficiency")
    plt.bar([0, 1, 2, 3], weak_eff, align="center", label="Efficiency")
    plt.xticks([0, 1, 2, 3], [1, 2, 4, 64])
    plt.legend(loc="upper left")
    plt.xlabel("Number of cores")
    plt.ylabel("Efficiency")
    plt.show()


def plotparallelismspread():
    times_128 = np.array([5.950223,3.648628,2.618375,2.091396,1.822410,1.593604,1.413976,1.318337,1.224516,1.153855,1.081384,1.029923,0.949118,0.950045,0.920668,0.881902,0.867521,0.846234,0.807689,0.780230,0.890790,0.840804,0.748822,0.757954,0.728700,0.749538,0.816955,0.762137])
    speedup_128 = times_128[0] / times_128
    times_256 = np.array([41.792838,23.007780,15.892794,12.462975,10.420937,8.919290,7.772728,7.139534,6.472923,6.072763,5.579524,5.127490,4.916809,4.570197,4.395612,4.057993,4.008485,3.838195,3.653942,3.525076,3.330248,3.311720,3.156242,3.098515,2.965013,2.933648,2.747209,2.760472])
    speedup_256 = times_256[0] / times_256
    times_1024 = np.array([215.899309,103.643975,74.969557,54.502181,48.344722,40.598941,34.625975,28.549383,28.190485,25.698105,23.469947,21.119348,20.428659,18.075947,17.936696,16.095167,17.723030,15.421552,17.348139,15.378277,13.315262,12.432627,12.858203,13.436907,14.445647,14.056382,13.134030,13.169946])
    speedup_1024 = times_1024[0] / times_1024
    plt.title("OMP_PROC_BIND = spread")
    plt.xticks(np.arange(2, 29, 2))
    plt.yticks(np.arange(0, 20, 2))
    plt.plot(np.arange(0, 29, 1), c="grey", linestyle="--")
    plt.plot(np.arange(1, 29), np.round(speedup_128, 1), c="b", marker=".", label="128")
    plt.plot(np.arange(1, 29), np.round(speedup_256, 1), c="r", marker=".", label="256" )
    plt.plot(np.arange(1, 29), np.round(speedup_1024, 1), c="g", marker=".", label="1024" )
    plt.xlim([0, 29])
    plt.ylim([0, 18])
    plt.legend(loc="upper left")
    plt.xlabel("Number of cores")
    plt.ylabel("Speedup")
    plt.show()

def plotvectorbar():
    op = np.array([22.2/20.117178, 176.5/161.120031, 730.6/673.476107])
    vec = np.array([22.2/5.986971, 176.5/41.834681, 730.6/213.666506])
    ind = np.arange(3)
    width = 0.3
    plt.title("Vectorisation Speedup")
    plt.bar(ind, op, width, color="b", label="Serial")
    plt.bar(ind + width, vec, width, color="g", label="Vectorised")
    plt.xticks(ind + width/2, ("128", "256", "1024"))
    plt.ylim([1, 5])
    plt.legend(loc="upper left")
    plt.xlabel("Grid size")
    plt.ylabel("Speedup")
    plt.show()

def main():
    #plotparallelismblock()
    #plotparallelismcollate()
    plotweakscaling()
    #plotparallelismclose()
    #plotparallelismspread()
    #plotvectorbar()

if __name__ == "__main__":
    main()